version: 2.1

orbs:
  python: circleci/python@1.2.0

jobs:
  build-and-test:
    executor: python/default
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
            chmod +x miniconda.sh && ./miniconda.sh -b -p ~/miniconda
            export PATH="~/miniconda/bin:$PATH"
            conda update --yes --quiet conda
            conda create -n testenv --yes --quiet python=3
            source activate testenv
            pip install -r requirements.txt
            pip install pandas sphinx_rtd_theme dvc
            pip install sphinx-gallery
            pip install dvc
            pip install pydrive2
            pip install .
            cd docs
            make html

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
#      - run:
#          name: run tests
#          paths:
#            - ./venv
#          command: |
#            pip install -r requirements.txt
#            pip install pandas sphinx_rtd_theme
#            pip install pandas pandas
#            pip install dvc
#            pip install pytest
#            pip install pytest-cov
#            pytest --cov=ITMO_FS test/

      - store_artifacts:
          path: test-reports
          destination: test-reports

workflows:
  main:
    jobs:
      - build-and-test